name: Prerelease

on:
  pull_request:
    types: [closed]

jobs:
  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release-v') }}
    env:
      CHANGELOG: ${{ github.event.pull_request.body }}
      GH_TOKEN: ${{ github.token }}
      REF_BRANCH: ${{ github.event.pull_request.head.ref }}
    permissions:
      contents: write # This is required for checkout and gh release
      id-token: write # This is required for requesting the JWT
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Check licenses
        run: yarn license-check

      - name: GraphQL Codegen
        run: yarn graphql-codegen

      - name: Typecheck
        run: yarn typecheck

      - name: Lint
        run: yarn lint

      - name: Run tests
        run: yarn test

      - name: Compile project
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn build

      - name: Configure AWS Credentials
        if: ${{ github.repository == 'swan-io/swan-partner-frontend' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: eu-west-1

      - name: Login to Docker Registry
        if: ${{ github.repository == 'swan-io/swan-partner-frontend' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}

      - name: Get version
        id: version
        run: echo version="$REF_BRANCH" | sed -e 's/release-//g' >> $GITHUB_OUTPUT

      - name: Dockerize & Push to Registry
        if: ${{ github.repository == 'swan-io/swan-partner-frontend' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-swan
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/swan-partner-frontend:preprod-${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY }}/swan-partner-frontend:preprod-${{ steps.version.outputs.version }}

      - name: Deploy
        if: ${{ github.repository == 'swan-io/swan-partner-frontend' }}
        run: yarn deploy-ci
        env:
          TAG: preprod-${{ steps.version.outputs.version }}
          DEPLOY_SWAN_TOKEN: ${{ secrets.DEPLOY_SWAN_TOKEN }}
          DEPLOY_SWAN_REPOSITORY: ${{ secrets.DEPLOY_SWAN_REPOSITORY }}
          DEPLOY_GIT_USER: ${{ secrets.DEPLOY_GIT_USER }}
          DEPLOY_GIT_EMAIL: ${{ secrets.DEPLOY_GIT_EMAIL }}
          DEPLOY_ENVIRONMENT: preprod
          DEPLOY_APP_NAME: partner-frontend

      - name: Create GitHub prerelease
        run: gh release create ${{ steps.version.outputs.version }} --title ${{ steps.version.outputs.version }} --notes "$CHANGELOG" --prerelease
