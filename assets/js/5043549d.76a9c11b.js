"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[899],{1768:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=t(4848),s=t(8453);const o={title:"GraphQL",sidebar_label:"GraphQL"},a=void 0,c={id:"graphql",title:"GraphQL",description:"Swan exposes a GraphQL API.",source:"@site/docs/graphql.md",sourceDirName:".",slug:"/graphql",permalink:"/swan-partner-frontend/graphql",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/swan-partner-frontend/edit/main/docs/docs/graphql.md",tags:[],version:"current",frontMatter:{title:"GraphQL",sidebar_label:"GraphQL"},sidebar:"docs",previous:{title:"GitHub repository",permalink:"/swan-partner-frontend/repository"},next:{title:"Build and deploy",permalink:"/swan-partner-frontend/build-deploy"}},i={},d=[{value:"Schemas",id:"schemas",level:2},{value:"Documents",id:"documents",level:2},{value:"Code generator",id:"code-generator",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Swan exposes a ",(0,r.jsx)(n.a,{href:"https://graphql.org/",children:"GraphQL"})," API.\nAnyone can try it out on the ",(0,r.jsx)(n.a,{href:"https://explorer.swan.io/",children:"API Explorer"})," in Sandbox mode."]}),"\n",(0,r.jsx)(n.h2,{id:"schemas",children:"Schemas"}),"\n",(0,r.jsx)(n.p,{children:"Update GraphQL schemas with the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"$ pnpm graphql-update-schemas\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Versioned schemas are stored in the repository to maintain consistent Continuous Integration (CI)."})}),"\n",(0,r.jsx)(n.h2,{id:"documents",children:"Documents"}),"\n",(0,r.jsxs)(n.p,{children:["All required documents are in the ",(0,r.jsx)(n.code,{children:"graphql"})," directory for each application."]}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"$consentId"})," with your consent ID."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",metastring:'title="clients/banking/src/graphql/partner.gql"',children:"query ConsentCallbackPage($consentId: ID!) {\n  consent(id: $consentId) {\n    id\n    status\n  }\n}\n\n# ...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"code-generator",children:"Code generator"}),"\n",(0,r.jsxs)(n.p,{children:["In order to benefit from GraphQL's types, we use ",(0,r.jsx)(n.a,{href:"https://the-guild.dev/graphql/codegen",children:"GraphQL Codegen"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Run codegen with the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"$ pnpm graphql-codegen\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, ",(0,r.jsx)(n.code,{children:"codegen"})," generates a new file ",(0,r.jsx)(n.code,{children:"partner.ts"}),", housed with documents, which we can import:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { ConsentCallbackPageDocument } from "../graphql/partner";\n\nconst MyComponent = () => {\n  const [{ data }] = useQuery(ConsentCallbackPageDocument, {});\n  // `data` is a typed object\n  // ...\n};\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Generated files are ",(0,r.jsx)(n.strong,{children:"not versioned"})," to avoid unnecessary conflicts. Instead, they're generated with CI."]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var r=t(6540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);