"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8],{4833:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/cards-multiple-f12fbe29ba5be370fbd7911e0930c322.png"},8269:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/cards-single-bc7d26421769cd8fa1fe4352dfb2dbba.png"},8304:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=s(4848),c=s(8453);const t={},i="Cards",a={id:"specs/banking/cards",title:"Cards",description:"The cards page is presented differently based on the user's account membership settings, so let's review the GraphQL queries first.",source:"@site/docs/specs/banking/cards.md",sourceDirName:"specs/banking",slug:"/specs/banking/cards",permalink:"/swan-partner-frontend/specs/banking/cards",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/swan-partner-frontend/edit/main/docs/docs/specs/banking/cards.md",tags:[],version:"current",frontMatter:{},sidebar:"specs",previous:{title:"Transfer",permalink:"/swan-partner-frontend/specs/banking/transfer"},next:{title:"Members",permalink:"/swan-partner-frontend/specs/banking/members"}},d={},l=[{value:"GraphQL queries",id:"graphql-queries",level:2},{value:"With account access",id:"with-account-access",level:3},{value:"No account access",id:"no-account-access",level:3},{value:"Card list views",id:"card-list-views",level:2},{value:"No cards",id:"no-cards",level:3},{value:"Single card",id:"single-card",level:3},{value:"Multiple cards",id:"multiple-cards",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"cards",children:"Cards"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"cards"})," page is presented differently based on the user's account membership settings, so let's review the GraphQL queries first."]}),"\n",(0,r.jsx)(n.h2,{id:"graphql-queries",children:"GraphQL queries"}),"\n",(0,r.jsx)(n.h3,{id:"with-account-access",children:"With account access"}),"\n",(0,r.jsxs)(n.p,{children:["The following query works if the user can access the account (",(0,r.jsx)(n.code,{children:"canViewAccount"}),": ",(0,r.jsx)(n.code,{children:"true"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:["Retrieve all the account cards using the root ",(0,r.jsx)(n.code,{children:"cards"})," query field and an ",(0,r.jsx)(n.code,{children:"accountId"})," filter:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query {\n  cards(filters: {accountId: $CURRENT_ACCOUNT_ID}) {\n    # ....\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"no-account-access",children:"No account access"}),"\n",(0,r.jsxs)(n.p,{children:["The following query works if the user doesn't have view access to the account (",(0,r.jsx)(n.code,{children:"canViewAccount"}),": ",(0,r.jsx)(n.code,{children:"false"}),")."]}),"\n",(0,r.jsx)(n.p,{children:"Retrive cards attached only to their membership:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query {\n  accountMembership(id: $CURRENT_ACCOUNT_MEMBERSHIP_ID) {\n    cards {\n      # ...\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"card-list-views",children:"Card list views"}),"\n",(0,r.jsx)(n.p,{children:"The view of the card list changes based on how many cards are displayed."}),"\n",(0,r.jsx)(n.h3,{id:"no-cards",children:"No cards"}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.strong,{children:"query returns no cards"}),", provide a way for users to add a card.\nNo other content is needed in the body of the page."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot of the cards page when query returns zero cards",src:s(9126).A+"",width:"2920",height:"1874"})}),"\n",(0,r.jsx)(n.h3,{id:"single-card",children:"Single card"}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.strong,{children:"query returns a single card"}),", the body of the page should include the following content:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Tabs for ",(0,r.jsx)(n.strong,{children:"virtual cards"}),", ",(0,r.jsx)(n.strong,{children:"physical cards"}),", ",(0,r.jsx)(n.strong,{children:"mobile payments"}),", and ",(0,r.jsx)(n.strong,{children:"transactions"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Large image"})," of the card with all card details (such as cardholder name, card number)"]}),"\n",(0,r.jsxs)(n.li,{children:["Card's ",(0,r.jsx)(n.strong,{children:"spending limit"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Remaining amount available"})," to be spent over the next 30 days"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot of the cards page when query returns one card",src:s(8269).A+"",width:"2920",height:"1874"})}),"\n",(0,r.jsx)(n.h3,{id:"multiple-cards",children:"Multiple cards"}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.strong,{children:"query returns multiple cards"}),", the body of the page should include the following content in a list format:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Button to add a new card"}),"\n",(0,r.jsxs)(n.li,{children:["Filters for ",(0,r.jsx)(n.strong,{children:"status"})," and ",(0,r.jsx)(n.strong,{children:"format"})]}),"\n",(0,r.jsxs)(n.li,{children:["List of cards","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Small image of the card"}),"\n",(0,r.jsx)(n.li,{children:"Full name and card format"}),"\n",(0,r.jsx)(n.li,{children:"Card name"}),"\n",(0,r.jsx)(n.li,{children:"Spending limit (remaining balance over total spending limit)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot of the cards page when query returns multiple cards",src:s(4833).A+"",width:"2920",height:"1874"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(6540);const c={},t=r.createContext(c);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),r.createElement(t.Provider,{value:n},e.children)}},9126:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/cards-empty-e4d07caff3339971ca371a10d5b5a5e0.png"}}]);