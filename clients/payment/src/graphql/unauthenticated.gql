query GetMerchantPaymentLink($paymentLinkId: ID!) {
  nonEEACountries
  merchantPaymentLink(id: $paymentLinkId) {
    id
    projectId
    url
    statusInfo {
      status
    }
    merchantProfile {
      id
      accentColor
      merchantLogoUrl
      merchantName
      merchantPaymentMethods {
        id
        type
      }
      merchantWebsite
    }
    amount {
      currency
      value
    }
    redirectUrl
    cancelRedirectUrl
    sequence
    billingAddress {
      addressLine1
      city
      country
      postalCode
      state
    }
    requestedExecutionAt
    externalReference
    reference
    language
    label
    customer {
      externalCustomerId
      iban
      name
    }
    paymentMethods {
      type
      id
    }
  }
}

mutation AddSepaDirectDebitPaymentMandateFromPaymentLink(
  $input: AddSepaDirectDebitPaymentMandateFromPaymentLinkInput!
) {
  addSepaDirectDebitPaymentMandateFromPaymentLink(input: $input) {
    ... on AddSepaDirectDebitPaymentMandateFromPaymentLinkSuccessPayload {
      paymentMandate {
        mandateDocumentUrl
        id
      }
    }
    ... on ValidationRejection {
      fields {
        path
        message
      }
    }
  }
}

mutation InitiateSddPaymentCollection(
  $input: UnauthenticatedInitiateMerchantSddPaymentCollectionFromPaymentLinkInput!
) {
  unauthenticatedInitiateMerchantSddPaymentCollectionFromPaymentLink(input: $input) {
    __typename
    ... on ForbiddenRejection {
      message
    }
    ... on InternalErrorRejection {
      message
    }
    ... on ValidationRejection {
      fields {
        code
        message
        path
      }
    }
  }
}

mutation AddCardPaymentMandate($input: AddCardPaymentMandateInput!) {
  unauthenticatedAddCardPaymentMandate(input: $input) {
    __typename
    ... on AddCardPaymentMandateSuccessPayload {
      paymentMandate {
        id
        __typename
      }
    }
    ... on Rejection {
      message
    }
  }
}

mutation InitiateCardMerchantPayment(
  $input: UnauthenticatedInitiateMerchantCardPaymentFromPaymentLinkInput!
) {
  unauthenticatedInitiateMerchantCardPaymentFromPaymentLink(input: $input) {
    __typename
    ... on UnauthenticatedInitiateMerchantCardPaymentFromPaymentLinkSuccessPayload {
      redirectUrl
    }
    ... on Rejection {
      message
    }
    ... on ValidationRejection {
      fields {
        code
        message
        path
      }
    }
  }
}
