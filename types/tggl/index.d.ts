// This file was automatically generated by the tggl CLI

import "tggl-client";

declare module "tggl-client" {
  export interface TgglContext {
    userId: string;
    email: string;
    timestamp: string | number;
    referer?: string;
    ip?: string;
    projectId: string;
    accountCountry: "FRA" | "NLD" | "DEU" | "ESP" | "ITA";
    environment: "master" | "preprod" | "prod" | "development";
    environmentType: "sandbox" | "live" | "admin";
    serviceName: string;
  }

  export interface TgglFlags {
    merchantPaymentMethodRequestUpdate: true;
    account_contract_enable_nl_white_label_tcu_template: true;
    sepaGatewayPublishSctInstEventsThroughFastKafkaTopics: true;
    frontendActivateMerchantProfileInWebBanking: true;
    KYCUseInternalSystemToCollectSupportingDocuments: true;
    paymentLink: true;
    isPusherFixed: true;
    add_new_reason_codes_for_capital_deposit_documents: true;
    shouldUseICTV2: true;
    use_mailjet_subaccount_for_mass_emailing: true;
    bankingBulkTransfer: true;
    requestCardPaymentMethod: true;
    kycAccountHoldersVerificationsView: true;
    account_contract_choose_pin_code_enabled: true;
    account_contract_use_swan_templates_for_tcu_notifications: true;
    teamManagementV2: true;
    account_contract_use_swan_tcu_templates_for_disabled_projects: true;
    closure_subscription_enabled: boolean;
    return_transaction_mutation: boolean;
    isCheckRedirectVerificationCodeCalled: boolean;
    enableSandboxMutations: boolean;
    sandboxIdentification: boolean;
    toRenewPhysicalCardFeatureEnabled: boolean;
    mutationAddSepaTrustedBeneficiary: boolean;
    testFrontEnd: boolean;
    new_physical_card_model_enabled: boolean;
    ciao_es_enabled: boolean;
    setIssuingProcessorCardProductOnRenewFeature: boolean;
    end_customer_billing_enabled: boolean;
    billing_v2_enabled: boolean;
    synchronize_fee_settings_enabled: boolean;
    renewVirtualCardFeature: boolean;
    addInternationalBeneficiary: boolean;
    create_capital_deposit_case_input_validation_enabled: boolean;
    cancelPhysicalCardAtExpirationFeature: boolean;
    twilioRatio: 0.8 | 1 | 0.5 | 0;
    renewPhysicalCardFeature: boolean;
    account_contract_enable_maestro_provider: boolean;
    complianceReason_default_account_closing: boolean;
    card_management_system_schedules_enabled: boolean;
    isNotificationsServiceEnabled: boolean;
    card_management_system_outboxer_enabled: boolean;
    notificationServiceUsageRatio: 0.8 | 1 | 0.5 | 0 | 0.2;
    lago_end_customer_enabled: boolean;
    account_contract_monext_openapi_enabled: boolean;
    account_contract_card_services_activated: boolean;
    addSepaBeneficiary: boolean;
    account_contract_card_jobs_activated: boolean;
    swan_supports_local_italian_iban: true;
    mutationAddInternationalTrustedBeneficiary: boolean;
    end_customer_usage_payment_v2_enabled: boolean;
    kycUseKycServiceForCompanyWorkflow: boolean;
    end_customer_ict_billing_enabled: boolean;
    testScalaFeatureFlag: "ASBABSBSDBAA";
    account_contract_send_tcu_notifications: true | null;
    use_optimized_count_in_paginate: boolean;
    initiate_international_credit_transfer_outgoing: boolean;
    kycUseKycServiceForFintectureWorkflow: boolean;
    useInternationalBeneficiary: boolean;
  }
}
