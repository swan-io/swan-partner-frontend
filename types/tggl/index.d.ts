// This file was automatically generated by the tggl CLI

import "tggl-client";

declare module "tggl-client" {
  export interface TgglContext {
    userId: string;
    email: string;
    timestamp: string | number;
    referer?: string;
    ip?: string;
    projectId: string;
    accountCountry: "FRA" | "NLD" | "DEU" | "ESP" | "ITA";
    environment: "master" | "preprod" | "prod" | "development";
    environmentType: "sandbox" | "live" | "admin";
    serviceName: string;
    countryCode: string;
  }

  export interface TgglFlags {
    choosePINCode: true;
    swan_account_membership_migration: true;
    beneficiaries: true;
    isPusherFixed: true;
    merchantWebBanking: true;
    sepaGatewayPublishSctInstEventsThroughFastKafkaTopics: true;
    paymentLink: true;
    requestCardPaymentMethod: true;
    shouldUseICTV2: true;
    use_mailjet_subaccount_for_mass_emailing: true;
    merchantPaymentMethodRequestUpdate: true;
    kycAccountHoldersVerificationsView: true;
    frontendActivateMerchantProfileInWebBanking: true;
    incomingForeignTransferScreeningEnabled: true;
    account_contract_use_swan_tcu_templates_for_disabled_projects: true;
    account_contract_choose_pin_code_enabled: true;
    bankingBulkTransfer: true;
    teamManagementV2: true;
    KYCUseInternalSystemToCollectSupportingDocuments: true;
    incomingTransferInstScreeningEnabled: true;
    account_contract_use_swan_templates_for_tcu_notifications: true;
    useInternationalBeneficiary: boolean;
    isCallToFeatureFlagProviderInBackground: boolean;
    international_credit_transfer_outgoing_remittance_settlement_enabled: boolean;
    incomingForeignTransferScreeningLimit: 50;
    switch_simulate_to_invoice_v2: boolean;
    mutationAddSepaTrustedBeneficiary: boolean;
    international_credit_transfer_swift_markup_enabled: boolean;
    account_contract_enable_maestro_provider_in_print_physical_card: boolean;
    incomingTransferScreeningLimit: 50;
    name_matching_use_valid_names_enabled: boolean;
    paymentLedgerCommunicationMode: "kafka" | "kafka_shadow_nats" | "nats_fallback_kafka" | "nats";
    billing_v2_account_invoice_updated_event_enabled: boolean;
    use_swan_public_data_s3: boolean;
    twilioRatio: 0.8 | 1 | 0.5 | 0 | 0.95 | 0.6;
    enableSandboxMutations: boolean;
    return_transaction_mutation: boolean;
    billing_v2_enabled: boolean;
    isScaDelegationEnabled: boolean;
    renewVirtualCardFeature: boolean;
    notificationServiceUsageRatio: 0.8 | 1 | 0.5 | 0 | 0.2;
    addInternationalBeneficiary: boolean;
    card_management_system_schedules_enabled: boolean;
    testFrontEnd: boolean;
    card_management_system_outboxer_enabled: boolean;
    sandboxIdentification: boolean;
    isCheckRedirectVerificationCodeCalled: boolean;
    isPhoneNumberCountryCodeBlocked: boolean;
    lago_end_customer_enabled: boolean;
    cancelPhysicalCardAtExpirationFeature: boolean;
    dataExportUser: boolean;
    account_contract_monext_openapi_enabled: boolean;
    company_onboarding_requires_ubo_residency_address: boolean;
    isNotificationsServiceEnabled: boolean;
    closure_subscription_enabled: boolean;
    incomingTransferScreeningEnabled: boolean;
    account_contract_card_services_activated: boolean;
    addSepaBeneficiary: boolean;
    account_contract_card_jobs_activated: boolean;
    renewPhysicalCardFeature: boolean;
    swan_supports_local_italian_iban: true;
    mutationAddInternationalTrustedBeneficiary: boolean;
    new_physical_card_model_enabled: boolean;
    card_management_system_create_default_card_product_when_new_project: boolean;
    toRenewPhysicalCardFeatureEnabled: boolean;
    end_customer_usage_payment_v2_enabled: boolean;
    account_contract_enable_maestro_provider: boolean;
    kycUseKycServiceForCompanyWorkflow: boolean;
    card_management_system_activate_finalize_saga_use_case: boolean;
    end_customer_ict_billing_enabled: boolean;
    testScalaFeatureFlag: "ASBABSBSDBAA";
    ciao_es_enabled: boolean;
    account_contract_send_tcu_notifications: true | null;
    use_enriched_transaction_data: boolean;
    setIssuingProcessorCardProductOnRenewFeature: boolean;
    initiate_international_credit_transfer_outgoing: boolean;
    use_optimized_count_in_paginate: boolean;
    kycUseKycServiceForFintectureWorkflow: boolean;
    end_customer_billing_enabled: boolean;
  }
}
